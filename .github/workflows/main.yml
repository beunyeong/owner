name: EC2에 빌드 및 배포

on:
  push:
    branches: [ develop ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04

    steps:
      - name: 코드 내려받기
        uses: actions/checkout@v3

      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: gradlew 실행 권한 부여
        run: chmod +x gradlew

      - name: Gradle로 빌드
        run: ./gradlew clean build -x test

      - name: EC2로 JAR 파일 복사
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: "./build/libs/*.jar"
          target: "~/app"

      - name: SSH 명령어 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            export aws_s3_bucket=${{ secrets.AWS_S3_BUCKET }}
            export aws_credentials_accessKey=${{ secrets.AWS_ACCESS_KEY }}
            export aws_credentials_secretKey=${{ secrets.AWS_SECRET_KEY }}
            export aws_region=${{ secrets.AWS_REGION }}

            SOURCE_DIR=~/app
            FILE_NAME=$(ls -t $SOURCE_DIR/*.jar | head -n 1)

            echo "#### 실행할 JAR 파일: $FILE_NAME ####"

            PID=$(pgrep -f "$FILE_NAME")
            if [ -z "$PID" ]; then
              echo "#### 실행 중인 프로세스 없음 ####"
            else
              echo "#### 프로세스 종료 중... ####"
              sudo kill $PID
              sleep 5
              if ps -p $PID > /dev/null; then
                echo "#### 프로세스 강제 종료 ####"
                sudo kill -9 $PID
              fi
            fi

            echo "#### 새로운 애플리케이션 실행 ####"
            nohup env DB_URL=${{ secrets.DB_URL }} DB_USERNAME=${{ secrets.DB_USERNAME }} DB_PASSWORD=${{ secrets.DB_PASSWORD }} java -jar $FILE_NAME > ~/app/nohup.out 2>&1 &
